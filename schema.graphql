type Registry @entity {
  id: ID!
  versions: [Version!]! @derivedFrom(field: "registry")
}

type Version @entity {
  id: ID!
  registry: Registry!
  funds: [Version!]! @derivedFrom(field: "version")
}

type Asset @entity {
  id: ID!
  decimals: Int!
  # symbol: String!
  # name: String!
}

type Fund @entity {
  id: ID!
  name: String!
  manager: String!
  version: Version!
  routes: Routes!
  investments: [Investment!]! @derivedFrom(field: "fund")
  creationTime: BigInt!
  isShutdown: Boolean!
}

type Routes @entity {
  id: ID!
  accounting: Accounting!
  participation: Participation!
  feeManager: FeeManager!
  policyManager: PolicyManager!
  shares: Shares!
  trading: Trading!
  vault: Vault!
  registry: String!
  version: String!
  engine: String!
  mlnToken: String!
  priceSource: String!
}

type Accounting @entity {
  id: ID!
  fund: Fund!
  demoniationAsset: Asset!
  nativeAsset: Asset!
  ownedAssets: [Asset!]!
}

type Participation @entity {
  id: ID!
  fund: Fund!
  allowedAssets: [Asset!]!
  investmentRequests: [InvestmentRequest!]!
}

type FeeManager @entity {
  id: ID!
  fund: Fund!
}

type PolicyManager @entity {
  id: ID!
  fund: Fund!
}

type Shares @entity {
  id: ID!
  fund: Fund!
}

type Trading @entity {
  id: ID!
  fund: Fund!
}

type Vault @entity {
  id: ID!
  fund: Fund!
}

type InvestmentRequest @entity {
  id: ID!
  fund: Fund!
}

type Investor @entity {
  id: ID!
  investments: [Investment!]! @derivedFrom(field: "owner")
}

type Investment @entity {
  id: ID!
  fund: Fund!
  owner: Investor!
  shares: BigInt!
}
